; name, price and image_url are defined with the methods they are used.
; The comma separated entities will be converted to a list.
; Do follow the format strictly while adding entities for other websites.
; Only url.domains is allowed to use comma separated items.
; Use *.filter to add filter name

[amazon.com]
url.path       = /.*/dp/.*
url.domains    = amazon.com, junglee.com
name           = amazon_api.title
price          = amazon_api.price_and_currency
price.filter   = tuple.0
image          = amazon_api.large_image_url
currency       = amazon_api.price_and_currency
currency.filter= tuple.1


[flipkart]
url.path       = /.*/p/.*
url.domains    = flipkart.com
name           = microdata./properties/name/0
price          = microdata./properties/offers/0/properties/price/0
price.filter   = regex.(\d+(\,\d+)*(\.\d+)?)
image          = opengraph.image
currency       = microdata./properties/offers/0/properties/priceCurrency/0



[itunes]
url.path       = /.*/album/.*/id.*
url.domains    = itunes.apple.com
name           = opengraph.title
price          = xpath.//span[@class="price"]//text()
price.filter   = regex.(\d+(\,\d+)*(\.\d+)?)
image          = opengraph.image
currency       = xpath.//span[@class="price"]//text()
currency.filter= regex.^(\D+)


[apple]
url.path       = (/us/product/.*/.*)|(/us/buy-.*/.*)
url.domains    = store.apple.com  
name           = microdata./properties/name/0
price          = microdata./properties/offers/0/properties/price/0
price.filter   = regex.(\d+(\,\d+)*(\.\d+)?)
image          = microdata./properties/image/0
currency       = microdata./properties/offers/0/properties/priceCurrency/0



[amazon.in]
url.path       = /.*/dp/.*/.*
url.domains    = amazon.in
name           = xpath.//span[@id='btAsinTitle']/span//text()
price          = xpath.//span[@class='priceLarge']/span//text()
image          = xpath.//td[@id='prodImageCell']/a/img/@src
